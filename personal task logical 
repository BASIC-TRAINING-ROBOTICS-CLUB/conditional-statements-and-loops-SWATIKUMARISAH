def evaluate_expression(expression, values):
    """
    Evaluates a digital logic expression with given values.

    :param expression: The logic expression as a string.
    :param values: Dictionary containing variable values (True or False).
    :return: The result of the logic expression.
    """
    
    # Replace variables in the expression with their boolean values
    for variable, value in values.items():
        expression = expression.replace(variable, str(value))
    
    # Replace logical operators with Python boolean operators
    expression = expression.replace('AND', 'and')
    expression = expression.replace('OR', 'or')
    expression = expression.replace('NOT', 'not')
    
    # Evaluate the expression
    try:
        result = eval(expression)
    except Exception as e:
        raise ValueError(f"Error evaluating expression: {e}")
    
    return result

# Example usage
expression = "(A AND B) OR (NOT C)"
values = {
    'A': True,
    'B': False,
    'C': True
}

result = evaluate_expression(expression, values)
print(f"The result of the expression '{expression}' with values {values} is {result}.")
